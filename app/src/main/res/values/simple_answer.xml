<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string-array name="simple_ans">
        <item>It is an open-sourced operating system that is used primarily on mobile devices, such as cell phones and tablets. It is a Linux kernel-based system that\'s been equipped with rich components that allows developers to create and run apps that can perform both basic and advanced functions.</item>
        <item>The Google Android SDK is a toolset that developers need in order to write apps on Android enabled devices. It contains a graphical interface that emulates an Android driven handheld environment, allowing them to test and debug their codes.</item>
        <item><summary>Android Architecture is made up of 4 key components:\n
            - Linux Kernel\n
            - Libraries\n
            - Android Framework\n
            - Android Applications
        </summary></item>
        <item>The Android Framework is an important aspect of the Android Architecture. Here you can find all the classes and methods that developers would need in order to write applications on the Android environment.</item>
        <item>AAPT is short for Android Asset Packaging Tool. This tool provides developers with the ability to deal with zip-compatible archives, which includes creating, extracting as well as viewing its contents.</item>
        <item>The emulator lets developers "play" around an interface that acts as if it were an actual mobile device. They can write and test codes, and even debug. Emulators are a safe place for testing codes especially if it is in the early design phase.</item>
        <item>An activityCreator is the first step towards the creation of a new Android project. It is made up of a shell script that will be used to create new file system structure necessary for writing codes within the Android IDE.</item>
        <item>Activities are what you refer to as the window to a user interface. Just as you create windows in order to display output or to ask for an input in the form of dialog boxes, activities play the same role, though it may not always be in the form of a user interface.</item>
        <item>Intents displays notification messages to the user from within the Android enabled device. It can be used to alert the user of a particular state that occurred. Users can be made to respond to intents.</item>
        <item>Activities can be closed, or terminated anytime the user wishes. On the other hand, services are designed to run behind the scenes, and can act independently. Most services run continuously, regardless of whether there are certain or no activities being executed.</item>
        <item>These are the essential items that are present each time an Android project is created:\n
            - AndroidManifest.xml\n
            - build.xml\n
            - bin/\n
            - src/\n
            - res/\n
            - assets/</item>
        <item>The use of XML-based layouts provides a consistent and somewhat standard means of setting GUI definition format. In common practice, layout details are placed in XML files while other items are placed in source files.</item>
        <item>Containers, as the name itself implies, holds objects and widgets together, depending on which specific items are needed and in what particular arrangement that is wanted. Containers may hold labels, fields, buttons, or even child containers, as examples.</item>
        <item>Orientation, which can be set using setOrientation(), dictates if the LinearLayout is represented as a row or as a column. Values are set as either HORIZONTAL or VERTICAL.</item>
        <item>Developers can write and register apps that will specifically run under the Android environment. This means that every mobile device that is Android enabled will be able to support and run these apps. With the growing popularity of Android mobile devices, developers can take advantage of this trend by creating and uploading their apps on the Android Market for distribution to anyone who wants to download it.</item>
        <item>Given that Android is an open-source platform, and the fact that different Android operating systems have been released on different mobile devices, there\'s no clear cut policy to how applications can adapt with various OS versions and upgrades. One app that runs on this particular version of Android OS may or may not run on another version. Another disadvantage is that since mobile devices such as phones and tabs come in different sizes and forms, it poses a challenge for developers to create apps that can adjust correctly to the right screen size and other varying features and specs.</item>
        <item>Adb is short for Android Debug Bridge. It allows developers the power to execute remote shell commands. Its basic function is to allow and control communication towards and from the emulator port.</item>
        <item>Active – if the activity is at the foreground\nPaused – if the activity is at the background and still visible\nStopped – if the activity is not visible and therefore is hidden or obscured by another activity\nDestroyed – when the activity process is killed or completed terminated</item>
        <item>ANR is short for Application Not Responding. This is actually a dialog that appears to the user whenever an application have been unresponsive for a long period of time.</item>
        <item>Among the different elements, the and elements must be present and can occur only once. The rest are optional, and can occur as many times as needed.</item>
        <item>Escape characters are preceded by double backslashes. For example, a newline character is created using \'\\n\'</item>
        <item>Permissions allow certain restrictions to be imposed primarily to protect data and code. Without these, codes could be compromised, resulting to defects in functionality.</item>
        <item>Because every component needs to indicate which intents they can respond to, intent filters are used to filter out intents that these components are willing to receive. One or more intent filters are possible, depending on the services and activities that is going to make use of it.</item>
        <item>Entire lifetime – activity happens between onCreate and onDestroy\nVisible lifetime – activity happens between onStart and onStop\nForeground lifetime – activity happens between onResume and onPause</item>
        <item>A call to onStop method happens when an activity is no longer visible to the user, either because another activity has taken over or if in front of that activity.</item>

    </string-array>
</resources>